watch = (paths, callback) ->
	fs = require 'fs'
	for path in paths
		fs.watch path, (event, filename) ->
			callback(event, filename)

task 'build', ->
	console.log 'Building'
	invoke 'build:index'
	invoke 'build:code'
	console.log 'Building done'

task 'build:index', ->
	fs = require 'fs'
	jade = require 'jade'
	fs.writeFileSync('public/index.html', jade.compile(fs.readFileSync('index.jade'))())

task 'build:code', ->
	fs = require 'fs'
	browserify = require 'browserify'
	jadeify2 = require 'jadeify2'
	coffeeify = require 'coffeeify'

	output = fs.createWriteStream 'public/app.js'

	b = browserify('./app.coffee')
	b.transform(jadeify2)
	b.transform(coffeeify)
	b.bundle().pipe output

task 'minify', ->
	uglifyjs = require 'uglify-js'
	fs = require 'fs'
	result = uglifyjs.minify('public/app.js');
	fs.writeFileSync('public/app.js', result.code)

task 'watch', ->
	console.log 'Watching for changes'
	watch ['models/', 'templates/', 'views/', 'app.coffee', 'index.jade'], (event, filename) -> invoke 'build'